<?php

/**
 * @file
 * Main module file for the Mega Menu module.
 */

/**
 * Implements hook_theme().
 */
function mega_menu_theme() {

  $items['menu__mega_menu'] = [
    'variables' => [
      'mega_menu' => NULL,
      'items' => [],
      'content' => [],
      'render_content_outside' => FALSE,
      'attributes' => [],
    ],
  ];

  return $items;
}

/**
 * Preprocess the mega menu templates and add additional content if needed.
 *
 * @param $variables
 */
function mega_menu_preprocess_menu__mega_menu(&$variables) {
  /** @var \Drupal\mega_menu\Contract\MegaMenuInterface $mega_menu */
  $mega_menu = $variables['mega_menu'];

  if (!$mega_menu->shouldRenderContentOutside()) {
    return;
  }

  // Set the should render status to the variables.
  $variables['render_content_outside'] = (bool) $mega_menu->shouldRenderContentOutside();

  // Add each items content to the content array.
  foreach ($variables['items'] as $item_key => $item) {
    if (!isset($item['content']) && empty($item['content'])) {
      continue;
    }
    $variables['content'][$item_key] = $item['content'];
  }
}

/**
 * Add theme suggestions for the mega menu templates.
 *
 * Implements hook_theme_suggestions_HOOK().
 */
function mega_menu_theme_suggestions_menu__mega_menu(array $variables) {
  $suggestions = [];

  /** @var \Drupal\mega_menu\Contract\MegaMenuInterface $mega_menu */
  $mega_menu = $variables['mega_menu'];
  
  $suggestions[] = 'menu__mega_menu__' . $mega_menu->getTargetMenu();

  return $suggestions;
}
